name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test-lint-build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: your_db_name
          POSTGRES_USER: your_user
          POSTGRES_PASSWORD: your_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    env:
      DJANGO_SETTINGS_MODULE: config.settings
      DATABASE_URL: postgres://your_user:your_password@localhost:5432/your_db_name
      REDIS_URL: redis://localhost:6379/0

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linters
        run: flake8 .

      - name: Run tests with coverage
        run: pytest --cov=habits --cov=users --cov-report=xml

      - name: Build Docker images
        run: docker-compose build

  deploy:
    needs: test-lint-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            cd /path/to/your/project
            git pull origin main
            docker-compose pull
            docker-compose up -d --build
